sudo: false

language: cpp

cache:
  directories:
    - downloads

os:
  - osx

# Only build the master branch, otherwise once the release is added, Github
# creates a tag which triggers another identical build.
branches:
  only:
    - master

before_install:
  - brew update

install:
  - ls
  - if [ ! -d downloads ] ; then
      mkdir downloads ;
    fi;
  - pushd downloads
  - if [ ! -f clang+llvm-3.9.0-x86_64-apple-darwin.tar.xz ] ; then
      curl -L -O http://llvm.org/releases/3.9.0/clang+llvm-3.9.0-x86_64-apple-darwin.tar.xz;
    fi;
  - tar -xf clang+llvm-3.9.0-x86_64-apple-darwin.tar.xz;
  - mv clang+llvm-3.9.0-x86_64-apple-darwin /usr/local/llvm39;
  - chmod 744 /usr/local/llvm39;
  - popd;
  - ls /usr/local/llvm39;
  - ls /usr/local/llvm39/bin;
  - brew unlink boost
  - brew install openssl
  - brew install cmake
  - brew install valgrind --build-bottle
  - brew install python3 --build-bottle
  - brew tap homebrew/science
  - travis_wait 60 brew install hdf5 --build-bottle

script:
  - BOOSTVER=1.62.0
  - PYTHONVER=3.5.2
  - OSXVER=$(sw_vers -productVersion)
  - VALGRIND=3.12.0
  - pushd downloads
# Build valgrind
  - brew unlink valgrind
  - if [ ! -d valgrind-$VALGRIND ] ; then
      curl -O -L http://valgrind.org/downloads/valgrind-3.12.0.tar.bz2;
    fi ;
  - tar -xf valgrind-3.12.0.tar.bz2
  - pushd valgrind-$VALGRIND
  - ./autogen.sh
  - ./configure --disable-dependency-tracking --prefix=/usr/local/Cellar/valgrind/HEAD --enable-only64bit --build=amd64-darwin CC=/usr/local/llvm39/bin/clang CXX=/usr/local/llvm39/bin/clang++
  - make && make install
  - brew link --overwrite valgrind
  - popd;
# Build python3
  - brew unlink python3
  - if [ ! -d python3-$PYTHONVER ] ; then
      brew unpack --patch --destdir=. python3;
    fi;
  - pushd python3-$PYTHONVER;
  - ./configure --prefix=/usr/local/Cellar/python3/$PYTHONVER --enable-ipv6 --datarootdir=/usr/local/Cellar/python3/$PYTHONVER/share --datadir=/usr/local/Cellar/python3/$PYTHONVER/share --enable-shared --with-ensurepip --without-gcc --with-valgrind CC=/usr/local/llvm39/bin/clang CXX=/usr/local/llvm39/bin/clang++ LDFLAGS="$MACOS_SDK -L/usr/local/opt/openssl/lib" CPPFLAGS="-pipe -w -Os -march=native -isystem/usr/local/include -isystem/usr/include/libxml2 -isystem/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/usr/local/opt/readline/include -I/usr/local/opt/sqlite/include -I/usr/local/opt/openssl/include $MACOS_SDK" CFLAGS="-pipe -w -Os -march=native -isystem/usr/local/include -isystem/usr/include/libxml2 -isystem/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/usr/local/opt/readline/include -I/usr/local/opt/sqlite/include -I/usr/local/opt/openssl/include $MACOS_SDK";
  - CC=/usr/local/llvm39/bin/clang;
  - CXX=/usr/local/llvm39/bin/clang++;
  - LDFLAGS="$MACOS_SDK -L/usr/local/opt/openssl/lib";
  - CPPFLAGS="-pipe -w -Os -march=native -isystem/usr/local/include -isystem/usr/include/libxml2 -isystem/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/usr/local/opt/readline/include -I/usr/local/opt/sqlite/include -I/usr/local/opt/openssl/include $MACOS_SDK" ;
  - CFLAGS="-pipe -w -Os -march=native -isystem/usr/local/include -isystem/usr/include/libxml2 -isystem/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/usr/local/opt/readline/include -I/usr/local/opt/sqlite/include -I/usr/local/opt/openssl/include $MACOS_SDK";
  - MACOSX_DEPLOYMENT_TARGET=$OSXVER;
  - make;
  - make install PYTHONAPPSDIR=/usr/local/Cellar/python3/$PYTHONVER;
  - popd
  - brew link --overwrite python3
# Build hdf5

  - popd
# Make bottles
  - mkdir bottles && pushd bottles
  - brew bottle valgrind
  - brew bottle python3
  - popd

before_deploy:
  - export RELEASE_FILES=$(ls bottles)
  - "echo 'Deploying files to Github: '$RELEASE_FILES"

deploy:
  provider: releases
  api_key:
    secure: "TqfrKR8qj8WNPcHvo6b9BhJmAYO0LEh8CI95UJ8W9RizWmiQPeq05nDyIoKW2gHvtgHmDnAWXr5je40yrQWq64EyogfaG+0gfJfdVV2cZcuJ4MSLW7sgEWwRaybHeKJjZTKVjrTA2EZDba3czYNclILbP+m1aq0nCzl37/+DdTkbGfkhxUcD7sBoPEYvAJWnOptKfsmOTwNE8bymnf4MutiI8H/8PQoj+SFJfLmGgfKU4PAVtE4CuY6Y9wZXsDv6jxSbIJxRhyY3Jki0npQ8tgv1iUQhc0W9OmFTEQ8AvdqHTaCF10F6CKwfGQWsEZyEbcqSy7ZzoFCuCTBM62u7z4EyXHSoeaK70Z2DWLfbiByOVB/Fg4t41y3JSgP/JUJY919gHi7FO/PBVuM8JwTxqkMqDvFiMhDi0hGwxZuJPb/NUJBBBK6jBfPpkWTlOIkVFET23WtE0+0TKoeeFZVFdJtPI0JlOCnmgjfvMgiUYt/JqKJvhBPa1iTu7iZKQp58NuuzLXn27yZrw2TaIOeH4Vnqz1Sf7JUL+IL8AHYeH/AtYNRCaKvvmDiVzSLL4zKzSQTde4ovWEPrExUUkRRCe26V0uJBosptEq7YftCoiLFDe1yEGRP1oK9K8h6hDHPxfaKTObGgA4tvzXgmSDm/Itanqpn62ChFHYPmowKpLWA="
  file: "${RELEASE_FILES}"
  skip_cleanup: true
  on:
    tag: true
  overwrite: true
