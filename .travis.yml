sudo: false

matrix:
  fast_finish: true
  include:
    - language: cpp
      os: osx
      osx_image: xcode8
    - language: cpp
      os: osx
      osx_image: xcode7

cache:
  directories:
  - downloads
  - /usr/local/llvm39

# Only build the master branch, otherwise once the release is added, Github
# creates a tag which triggers another identical build.
branches:
  only:
    - master

before_install:
  - brew update

install:
  - if [ ! -d downloads ] ; then
      mkdir downloads ;
    fi;
  - pushd downloads
  - ls -l
  - if [ ! -f clang+llvm-3.9.0-x86_64-apple-darwin.tar.xz ] ; then
      curl -L -O http://llvm.org/releases/3.9.0/clang+llvm-3.9.0-x86_64-apple-darwin.tar.xz;
    fi;
  - if [ ! -d clang+llvm-3.9.0-x86_64-apple-darwin ] ; then
      tar -xf clang+llvm-3.9.0-x86_64-apple-darwin.tar.xz;
      cp clang+llvm-3.9.0-x86_64-apple-darwin /usr/local/llvm39;
      chmod 744 /usr/local/llvm39;
    fi
  - export CC=/usr/local/llvm39/bin/clang
  - export CXX=/usr/local/llvm39/bin/clang++
  - brew install openssl || brew upgrade openssl
  - brew install cmake || brew upgrade cmake
  - brew install sqlite || brew upgrade sqlite
  - brew install xz || brew upgrade xz
  - brew install --build-bottle valgrind
  - brew install --build-bottle python3
  - brew unlink boost
#  - travis_wait 40 brew install --build-bottle boost
#  - brew install --with-python3 --build-bottle boost-python
  - brew tap homebrew/science
  - brew install hdf5
  - popd;

script:
  - BOOSTVER=1.62.0
  - PYTHONVER=3.5.2
  - OSXVER=$(sw_vers -productVersion | awk -F '.' '{print $1 "." $2}')
  - VALGRIND=3.12.0
  - HDF5=1.8.17
  - MACOS_SDK="-mmacosx-version-min=$OSXVER";
  - pushd downloads
# Build valgrind
  - brew unlink valgrind
  - if [ ! -d valgrind-$VALGRIND ] ; then
      brew unpack --patch --destdir=. valgrind ;
    fi;
  - pushd valgrind-$VALGRIND
  - ./autogen.sh
  - ./configure --disable-dependency-tracking --prefix=/usr/local/Cellar/valgrind/$VALGRIND --enable-only64bit --build=amd64-darwin CC=/usr/local/llvm39/bin/clang CXX=/usr/local/llvm39/bin/clang++
  - make >/dev/null || make
  - make install > valgrind.log
  - brew link --overwrite valgrind
  - popd;
# Build python3
  - brew unlink python3
  - if [ ! -d python3-$PYTHONVER ] ; then
      brew unpack --patch --destdir=. python3;
    fi;
  - pushd python3-$PYTHONVER;
  - ./configure --prefix=/usr/local/Cellar/python3/$PYTHONVER --enable-ipv6 --datarootdir=/usr/local/Cellar/python3/$PYTHONVER/share --datadir=/usr/local/Cellar/python3/$PYTHONVER/share --enable-shared --with-ensurepip --without-gcc --with-valgrind CC=/usr/local/llvm39/bin/clang CXX=/usr/local/llvm39/bin/clang++ LDFLAGS="$MACOS_SDK -L/usr/local/opt/openssl/lib" CPPFLAGS="-pipe -w -Os -march=native -isystem/usr/local/include -isystem/usr/include/libxml2 -isystem/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/usr/local/opt/readline/include -I/usr/local/opt/sqlite/include -I/usr/local/opt/openssl/include $MACOS_SDK" CFLAGS="-pipe -w -Os -march=native -isystem/usr/local/include -isystem/usr/include/libxml2 -isystem/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/usr/local/opt/readline/include -I/usr/local/opt/sqlite/include -I/usr/local/opt/openssl/include $MACOS_SDK";
  - CC=/usr/local/llvm39/bin/clang;
  - CXX=/usr/local/llvm39/bin/clang++;
  - LDFLAGS="$MACOS_SDK -L/usr/local/opt/openssl/lib";
  - CPPFLAGS="-pipe -w -Os -march=native -isystem/usr/local/include -isystem/usr/include/libxml2 -isystem/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/usr/local/opt/readline/include -I/usr/local/opt/sqlite/include -I/usr/local/opt/openssl/include $MACOS_SDK" ;
  - CFLAGS="-pipe -w -Os -march=native -isystem/usr/local/include -isystem/usr/include/libxml2 -isystem/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/usr/local/opt/readline/include -I/usr/local/opt/sqlite/include -I/usr/local/opt/openssl/include $MACOS_SDK";
  - MACOSX_DEPLOYMENT_TARGET=$OSXVER;
  - make >/dev/null || make;
  - make install PYTHONAPPSDIR=/usr/local/Cellar/python3/$PYTHONVER > python3.log;
  - popd
  - brew link --overwrite python3
# Build hdf5
  - brew unlink hdf5
  - if [ ! -d hdf5-$HDF5 ] ; then
      brew unpack --patch --destdir=. hdf5;
    fi
  - pushd hdf5-$HDF5
  - ./configure --prefix=/usr/local/Cellar/hdf5/$HDF5 --enable-production --enable-debug=no --disable-dependency-tracking --with-zlib=/usr --with-szlib=/usr/local/opt/szip --enable-static=yes --enable-shared=yes --enable-cxx --disable-fortran CC=/usr/local/llvm39/bin/clang CXX=/usr/local/llvm39/bin/clang++ CFLAGS="$MACOS_SDK" CPPFLAGS="$MACOS_SDK" LDFLAGS="$MACOS_SDK";
  - make >/dev/null || make
  - make install >hdf5.log
  - popd
# Build Boost
#  - travis_wait 40 ./../build-boost.sh $OSXVER $PYTHONVER $BOOSTVER
# Build Boost-Python
#  - ./../build-boost-python.sh $OSXVER $PYTHONVER $BOOSTVER
# Make bottles
  - popd
  - mkdir bottles-osx$OSXVER && pushd bottles-osx$OSXVER
  - brew bottle valgrind
  - brew bottle python3
  - brew bottle hdf5
#  - brew bottle boost
  - popd

before_deploy:
  - export RELEASE_FILES=$(ls bottles-osx$OSXVER)
  - "echo 'Deploying files to Github: '$RELEASE_FILES"

deploy:
  provider: releases
  api_key:
    secure: "TqfrKR8qj8WNPcHvo6b9BhJmAYO0LEh8CI95UJ8W9RizWmiQPeq05nDyIoKW2gHvtgHmDnAWXr5je40yrQWq64EyogfaG+0gfJfdVV2cZcuJ4MSLW7sgEWwRaybHeKJjZTKVjrTA2EZDba3czYNclILbP+m1aq0nCzl37/+DdTkbGfkhxUcD7sBoPEYvAJWnOptKfsmOTwNE8bymnf4MutiI8H/8PQoj+SFJfLmGgfKU4PAVtE4CuY6Y9wZXsDv6jxSbIJxRhyY3Jki0npQ8tgv1iUQhc0W9OmFTEQ8AvdqHTaCF10F6CKwfGQWsEZyEbcqSy7ZzoFCuCTBM62u7z4EyXHSoeaK70Z2DWLfbiByOVB/Fg4t41y3JSgP/JUJY919gHi7FO/PBVuM8JwTxqkMqDvFiMhDi0hGwxZuJPb/NUJBBBK6jBfPpkWTlOIkVFET23WtE0+0TKoeeFZVFdJtPI0JlOCnmgjfvMgiUYt/JqKJvhBPa1iTu7iZKQp58NuuzLXn27yZrw2TaIOeH4Vnqz1Sf7JUL+IL8AHYeH/AtYNRCaKvvmDiVzSLL4zKzSQTde4ovWEPrExUUkRRCe26V0uJBosptEq7YftCoiLFDe1yEGRP1oK9K8h6hDHPxfaKTObGgA4tvzXgmSDm/Itanqpn62ChFHYPmowKpLWA="
  file: bottles-osx$OSXVER/*.gz
  file_glob: true
  skip_cleanup: true
  on:
    tag: true
  overwrite: true
